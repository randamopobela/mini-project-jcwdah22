
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  userName: 'userName',
  firstName: 'firstName',
  lastName: 'lastName',
  profilePicture: 'profilePicture',
  role: 'role',
  phone: 'phone',
  address: 'address',
  referralCode: 'referralCode',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EventScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  category: 'category',
  eventPicture: 'eventPicture',
  location: 'location',
  startDate: 'startDate',
  endDate: 'endDate',
  price: 'price',
  availableSlots: 'availableSlots',
  totalSlots: 'totalSlots',
  organizerId: 'organizerId',
  status: 'status',
  isFree: 'isFree',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TransactionScalarFieldEnum = {
  id: 'id',
  eventId: 'eventId',
  userId: 'userId',
  ticketQuantity: 'ticketQuantity',
  totalPrice: 'totalPrice',
  discountPoints: 'discountPoints',
  discountVouchers: 'discountVouchers',
  discountCoupons: 'discountCoupons',
  finalPrice: 'finalPrice',
  status: 'status',
  paymentProof: 'paymentProof',
  paymentMethod: 'paymentMethod',
  expiredAt: 'expiredAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TicketScalarFieldEnum = {
  id: 'id',
  ticketCode: 'ticketCode',
  eventId: 'eventId',
  userId: 'userId',
  transactionId: 'transactionId',
  bibNumber: 'bibNumber',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VoucherScalarFieldEnum = {
  id: 'id',
  eventId: 'eventId',
  voucherCode: 'voucherCode',
  discountAmount: 'discountAmount',
  minimalPurchase: 'minimalPurchase',
  maximalDiscount: 'maximalDiscount',
  startDate: 'startDate',
  endDate: 'endDate',
  isActive: 'isActive',
  isEarlyBird: 'isEarlyBird',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VoucherAssignmentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  voucherId: 'voucherId',
  transactionId: 'transactionId',
  status: 'status',
  usedAt: 'usedAt'
};

exports.Prisma.CouponScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  couponCode: 'couponCode',
  discountAmount: 'discountAmount',
  expiredAt: 'expiredAt',
  userId: 'userId',
  transactionId: 'transactionId',
  isActive: 'isActive',
  isUsed: 'isUsed',
  usedAt: 'usedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  eventId: 'eventId',
  userId: 'userId',
  title: 'title',
  rating: 'rating',
  comment: 'comment',
  createdAt: 'createdAt'
};

exports.Prisma.BadgeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  icon: 'icon',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserBadgeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  eventId: 'eventId',
  badgeId: 'badgeId',
  createdAt: 'createdAt'
};

exports.Prisma.ReferralScalarFieldEnum = {
  id: 'id',
  referrerId: 'referrerId',
  referredId: 'referredId',
  createdAt: 'createdAt'
};

exports.Prisma.UserPointsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  totalPoints: 'totalPoints',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PointsLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  description: 'description',
  points: 'points',
  expiredAt: 'expiredAt',
  createdAt: 'createdAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  message: 'message',
  isRead: 'isRead',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserRole = exports.$Enums.UserRole = {
  CUSTOMER: 'CUSTOMER',
  ORGANIZER: 'ORGANIZER',
  ADMIN: 'ADMIN'
};

exports.EventCategory = exports.$Enums.EventCategory = {
  FUN_RUN: 'FUN_RUN',
  FIVE_K: 'FIVE_K',
  TEN_K: 'TEN_K',
  HALF_MARATHON: 'HALF_MARATHON',
  MARATHON: 'MARATHON',
  ULTRA_MARATHON: 'ULTRA_MARATHON',
  TRAIL_RUN: 'TRAIL_RUN',
  VIRTUAL_RUN: 'VIRTUAL_RUN'
};

exports.EventStatus = exports.$Enums.EventStatus = {
  DRAFT: 'DRAFT',
  PUBLISHED: 'PUBLISHED',
  ONGOING: 'ONGOING',
  COMPLETED: 'COMPLETED',
  CANCELED: 'CANCELED'
};

exports.TransactionStatus = exports.$Enums.TransactionStatus = {
  AWAITING_PAYMENT: 'AWAITING_PAYMENT',
  PENDING_CONFIRMATION: 'PENDING_CONFIRMATION',
  PAID: 'PAID',
  REJECTED: 'REJECTED',
  EXPIRED: 'EXPIRED',
  CANCELED: 'CANCELED'
};

exports.PaymentMethod = exports.$Enums.PaymentMethod = {
  BANK_TRANSFER: 'BANK_TRANSFER',
  CREDIT_CARD: 'CREDIT_CARD',
  E_WALLET: 'E_WALLET'
};

exports.TicketStatus = exports.$Enums.TicketStatus = {
  ISSUED: 'ISSUED',
  USED: 'USED',
  CANCELED: 'CANCELED'
};

exports.VoucherStatus = exports.$Enums.VoucherStatus = {
  ISSUED: 'ISSUED',
  CANCELED: 'CANCELED'
};

exports.PointsLogType = exports.$Enums.PointsLogType = {
  REFERRAL_BONUS: 'REFERRAL_BONUS',
  PURCHASE: 'PURCHASE',
  PROMOTION: 'PROMOTION',
  REDEMPTION: 'REDEMPTION',
  REFUND: 'REFUND'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  TRANSACTION: 'TRANSACTION',
  EVENT_UPDATE: 'EVENT_UPDATE',
  REMINDER: 'REMINDER',
  SYSTEM: 'SYSTEM'
};

exports.Prisma.ModelName = {
  User: 'User',
  Event: 'Event',
  Transaction: 'Transaction',
  Ticket: 'Ticket',
  Voucher: 'Voucher',
  VoucherAssignment: 'VoucherAssignment',
  Coupon: 'Coupon',
  Review: 'Review',
  Badge: 'Badge',
  UserBadge: 'UserBadge',
  Referral: 'Referral',
  UserPoints: 'UserPoints',
  PointsLog: 'PointsLog',
  Notification: 'Notification'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\webdev\\project\\eventManajemen putra\\mini-project-jcwdah22\\api\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\webdev\\project\\eventManajemen putra\\mini-project-jcwdah22\\api\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id             String   @id\n  email          String   @unique\n  password       String\n  userName       String   @unique @map(\"user_name\")\n  firstName      String   @map(\"first_name\")\n  lastName       String?  @map(\"last_name\")\n  profilePicture String?  @map(\"profile_picture\")\n  role           UserRole\n  phone          String?\n  address        String?\n  referralCode   String   @unique @map(\"referral_code\")\n  isActive       Boolean  @default(true) @map(\"is_active\")\n  createdAt      DateTime @default(now()) @map(\"created_at\")\n  updatedAt      DateTime @updatedAt @map(\"updated_at\")\n\n  events             Event[]             @relation(\"OrganizerEvents\")\n  transactions       Transaction[]\n  tickets            Ticket[]\n  voucherAssignments VoucherAssignment[]\n  coupons            Coupon[]\n  userPoints         UserPoints[]\n  pointsLog          PointsLog[]\n  referral           Referral[]          @relation(\"Referrer\")\n  referred           Referral[]          @relation(\"Referred\")\n  reviews            Review[]\n  badges             UserBadge[]\n  notifications      Notification[]\n\n  @@map(\"users\")\n}\n\nenum UserRole {\n  CUSTOMER\n  ORGANIZER\n  ADMIN\n}\n\nmodel Event {\n  id             Int           @id @default(autoincrement())\n  title          String        @unique\n  description    String\n  category       EventCategory\n  eventPicture   String?       @map(\"event_picture\")\n  location       String\n  startDate      DateTime      @map(\"start_date\")\n  endDate        DateTime      @map(\"end_date\")\n  price          Int           @default(0)\n  availableSlots Int           @map(\"available_slots\")\n  totalSlots     Int           @map(\"total_slots\")\n  organizerId    String        @map(\"organizer_id\")\n  organizer      User          @relation(\"OrganizerEvents\", fields: [organizerId], references: [id])\n  status         EventStatus   @default(DRAFT)\n  isFree         Boolean       @default(false)\n  createdAt      DateTime      @default(now()) @map(\"created_at\")\n  updatedAt      DateTime      @updatedAt @map(\"updated_at\")\n\n  transactions Transaction[]\n  tickets      Ticket[]\n  vouchers     Voucher[]\n  reviews      Review[]\n  badges       UserBadge[]\n\n  @@map(\"events\")\n}\n\nenum EventCategory {\n  FUN_RUN\n  FIVE_K\n  TEN_K\n  HALF_MARATHON\n  MARATHON\n  ULTRA_MARATHON\n  TRAIL_RUN\n  VIRTUAL_RUN\n}\n\nenum EventStatus {\n  DRAFT\n  PUBLISHED\n  ONGOING\n  COMPLETED\n  CANCELED\n}\n\nmodel Transaction {\n  id               Int               @id @default(autoincrement())\n  eventId          Int               @map(\"event_id\")\n  event            Event             @relation(fields: [eventId], references: [id])\n  userId           String            @map(\"user_id\")\n  user             User              @relation(fields: [userId], references: [id])\n  ticketQuantity   Int               @map(\"ticket_quantity\")\n  totalPrice       Int               @map(\"total_price\")\n  discountPoints   Int               @default(0) @map(\"discount_points\") // poin yang dipakai\n  discountVouchers Int               @default(0) @map(\"discount_vouchers\")\n  discountCoupons  Int               @default(0) @map(\"discount_coupons\")\n  finalPrice       Int               @map(\"final_price\") // total setelah diskon\n  status           TransactionStatus\n  paymentProof     String?           @map(\"payment_proof\")\n  paymentMethod    PaymentMethod     @map(\"payment_method\")\n  expiredAt        DateTime          @map(\"expired_at\")\n  createdAt        DateTime          @default(now()) @map(\"created_at\")\n  updatedAt        DateTime          @updatedAt @map(\"updated_at\")\n\n  tickets  Ticket[]\n  vouchers VoucherAssignment[]\n  coupons  Coupon[]\n\n  @@map(\"transactions\")\n}\n\nenum TransactionStatus {\n  AWAITING_PAYMENT\n  PENDING_CONFIRMATION\n  PAID\n  REJECTED\n  EXPIRED\n  CANCELED\n}\n\nenum PaymentMethod {\n  BANK_TRANSFER\n  CREDIT_CARD\n  E_WALLET\n}\n\nmodel Ticket {\n  id            Int          @id @default(autoincrement())\n  ticketCode    String       @unique @map(\"ticket_code\")\n  eventId       Int          @map(\"event_id\")\n  event         Event        @relation(fields: [eventId], references: [id])\n  userId        String       @map(\"user_id\")\n  user          User         @relation(fields: [userId], references: [id])\n  transactionId Int          @map(\"transaction_id\")\n  transaction   Transaction  @relation(fields: [transactionId], references: [id])\n  bibNumber     String?      @unique @map(\"bib_number\")\n  status        TicketStatus @default(ISSUED)\n  createdAt     DateTime     @default(now()) @map(\"created_at\")\n  updatedAt     DateTime     @updatedAt @map(\"updated_at\")\n\n  @@map(\"tickets\")\n}\n\nenum TicketStatus {\n  ISSUED\n  USED\n  CANCELED\n}\n\nmodel Voucher {\n  id              Int      @id @default(autoincrement())\n  eventId         Int      @map(\"event_id\")\n  event           Event    @relation(fields: [eventId], references: [id])\n  voucherCode     String   @unique @map(\"voucher_code\")\n  discountAmount  Int      @map(\"discount_amount\")\n  minimalPurchase Int      @map(\"minimal_purchase\")\n  maximalDiscount Int      @map(\"maximal_discount\")\n  startDate       DateTime @map(\"start_date\")\n  endDate         DateTime @map(\"end_date\")\n  isActive        Boolean  @default(false)\n  isEarlyBird     Boolean  @default(false)\n  createdAt       DateTime @default(now()) @map(\"created_at\")\n  updatedAt       DateTime @updatedAt @map(\"updated_at\")\n\n  assignments VoucherAssignment[]\n\n  @@map(\"vouchers\")\n}\n\nmodel VoucherAssignment {\n  id            Int           @id @default(autoincrement())\n  userId        String        @map(\"user_id\")\n  user          User          @relation(fields: [userId], references: [id])\n  voucherId     Int           @map(\"voucher_id\")\n  voucher       Voucher       @relation(fields: [voucherId], references: [id])\n  transactionId Int           @map(\"transaction_id\")\n  transaction   Transaction   @relation(fields: [transactionId], references: [id])\n  status        VoucherStatus @default(ISSUED)\n  usedAt        DateTime?     @map(\"used_at\")\n\n  @@map(\"voucher_assignments\")\n}\n\nenum VoucherStatus {\n  ISSUED\n  CANCELED\n}\n\nmodel Coupon {\n  id             Int          @id @default(autoincrement())\n  title          String\n  description    String\n  couponCode     String       @unique @map(\"coupon_code\")\n  discountAmount Int          @map(\"discount_amount\")\n  expiredAt      DateTime     @map(\"expired_at\")\n  userId         String       @map(\"user_id\")\n  user           User         @relation(fields: [userId], references: [id])\n  transactionId  Int?         @map(\"transaction_id\")\n  transaction    Transaction? @relation(fields: [transactionId], references: [id])\n  isActive       Boolean      @default(true)\n  isUsed         Boolean      @default(false)\n  usedAt         DateTime?\n  createdAt      DateTime     @default(now()) @map(\"created_at\")\n  updatedAt      DateTime     @updatedAt @map(\"updated_at\")\n\n  @@map(\"coupons\")\n}\n\nmodel Review {\n  id        Int      @id @default(autoincrement())\n  eventId   Int      @map(\"event_id\")\n  event     Event    @relation(fields: [eventId], references: [id])\n  userId    String   @map(\"user_id\")\n  user      User     @relation(fields: [userId], references: [id])\n  title     String?\n  rating    Int\n  comment   String?\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  @@map(\"reviews\")\n}\n\nmodel Badge {\n  id          Int      @id @default(autoincrement())\n  name        String   @unique\n  description String?\n  icon        String?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  users UserBadge[]\n\n  @@map(\"badges\")\n}\n\nmodel UserBadge {\n  id        Int      @id @default(autoincrement())\n  userId    String   @map(\"user_id\")\n  user      User     @relation(fields: [userId], references: [id])\n  eventId   Int      @map(\"event_id\")\n  event     Event    @relation(fields: [eventId], references: [id])\n  badgeId   Int      @map(\"badge_id\")\n  badge     Badge    @relation(fields: [badgeId], references: [id])\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  @@map(\"user_badges\")\n}\n\nmodel Referral {\n  id         Int      @id @default(autoincrement())\n  referrerId String   @map(\"referrer_id\")\n  referrer   User     @relation(\"Referrer\", fields: [referrerId], references: [id])\n  referredId String   @map(\"referred_id\")\n  referred   User     @relation(\"Referred\", fields: [referredId], references: [id])\n  createdAt  DateTime @default(now()) @map(\"created_at\")\n\n  @@map(\"referrals\")\n}\n\nmodel UserPoints {\n  id          Int      @id @default(autoincrement())\n  userId      String   @unique @map(\"user_id\")\n  user        User     @relation(fields: [userId], references: [id])\n  totalPoints Int      @default(0) @map(\"total_points\")\n  createdAt   DateTime @default(now()) @map(\"created_at\")\n  updatedAt   DateTime @updatedAt @map(\"updated_at\")\n\n  @@map(\"user_points\")\n}\n\nmodel PointsLog {\n  id          Int           @id @default(autoincrement())\n  userId      String\n  user        User          @relation(fields: [userId], references: [id])\n  type        PointsLogType\n  description String // Misal: \"Referral bonus from user X\"\n  points      Int\n  expiredAt   DateTime\n  createdAt   DateTime      @default(now())\n\n  @@map(\"points_log\")\n}\n\nenum PointsLogType {\n  REFERRAL_BONUS\n  PURCHASE\n  PROMOTION\n  REDEMPTION\n  REFUND\n}\n\nmodel Notification {\n  id        Int              @id @default(autoincrement())\n  userId    String           @map(\"user_id\")\n  user      User             @relation(fields: [userId], references: [id])\n  type      NotificationType\n  message   String\n  isRead    Boolean          @default(false) @map(\"is_read\")\n  createdAt DateTime         @default(now()) @map(\"created_at\")\n\n  @@map(\"notifications\")\n}\n\nenum NotificationType {\n  TRANSACTION\n  EVENT_UPDATE\n  REMINDER\n  SYSTEM\n}\n",
  "inlineSchemaHash": "4228f096e0e0208cb43aa0d6ce3ce528022d0195facab9af579a25e462fd3567",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_name\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"first_name\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"last_name\"},{\"name\":\"profilePicture\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"profile_picture\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referralCode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"referral_code\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"events\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"OrganizerEvents\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"TransactionToUser\"},{\"name\":\"tickets\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"TicketToUser\"},{\"name\":\"voucherAssignments\",\"kind\":\"object\",\"type\":\"VoucherAssignment\",\"relationName\":\"UserToVoucherAssignment\"},{\"name\":\"coupons\",\"kind\":\"object\",\"type\":\"Coupon\",\"relationName\":\"CouponToUser\"},{\"name\":\"userPoints\",\"kind\":\"object\",\"type\":\"UserPoints\",\"relationName\":\"UserToUserPoints\"},{\"name\":\"pointsLog\",\"kind\":\"object\",\"type\":\"PointsLog\",\"relationName\":\"PointsLogToUser\"},{\"name\":\"referral\",\"kind\":\"object\",\"type\":\"Referral\",\"relationName\":\"Referrer\"},{\"name\":\"referred\",\"kind\":\"object\",\"type\":\"Referral\",\"relationName\":\"Referred\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewToUser\"},{\"name\":\"badges\",\"kind\":\"object\",\"type\":\"UserBadge\",\"relationName\":\"UserToUserBadge\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"}],\"dbName\":\"users\"},\"Event\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"EventCategory\"},{\"name\":\"eventPicture\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"event_picture\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"start_date\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"end_date\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"availableSlots\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"available_slots\"},{\"name\":\"totalSlots\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_slots\"},{\"name\":\"organizerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"organizer_id\"},{\"name\":\"organizer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrganizerEvents\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"EventStatus\"},{\"name\":\"isFree\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"EventToTransaction\"},{\"name\":\"tickets\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"EventToTicket\"},{\"name\":\"vouchers\",\"kind\":\"object\",\"type\":\"Voucher\",\"relationName\":\"EventToVoucher\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"EventToReview\"},{\"name\":\"badges\",\"kind\":\"object\",\"type\":\"UserBadge\",\"relationName\":\"EventToUserBadge\"}],\"dbName\":\"events\"},\"Transaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"event_id\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToTransaction\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TransactionToUser\"},{\"name\":\"ticketQuantity\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"ticket_quantity\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_price\"},{\"name\":\"discountPoints\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"discount_points\"},{\"name\":\"discountVouchers\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"discount_vouchers\"},{\"name\":\"discountCoupons\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"discount_coupons\"},{\"name\":\"finalPrice\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"final_price\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TransactionStatus\"},{\"name\":\"paymentProof\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"payment_proof\"},{\"name\":\"paymentMethod\",\"kind\":\"enum\",\"type\":\"PaymentMethod\",\"dbName\":\"payment_method\"},{\"name\":\"expiredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"expired_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"tickets\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"TicketToTransaction\"},{\"name\":\"vouchers\",\"kind\":\"object\",\"type\":\"VoucherAssignment\",\"relationName\":\"TransactionToVoucherAssignment\"},{\"name\":\"coupons\",\"kind\":\"object\",\"type\":\"Coupon\",\"relationName\":\"CouponToTransaction\"}],\"dbName\":\"transactions\"},\"Ticket\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ticketCode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ticket_code\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"event_id\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToTicket\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TicketToUser\"},{\"name\":\"transactionId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"transaction_id\"},{\"name\":\"transaction\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"TicketToTransaction\"},{\"name\":\"bibNumber\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"bib_number\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TicketStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"tickets\"},\"Voucher\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"event_id\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToVoucher\"},{\"name\":\"voucherCode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"voucher_code\"},{\"name\":\"discountAmount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"discount_amount\"},{\"name\":\"minimalPurchase\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"minimal_purchase\"},{\"name\":\"maximalDiscount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"maximal_discount\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"start_date\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"end_date\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isEarlyBird\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"assignments\",\"kind\":\"object\",\"type\":\"VoucherAssignment\",\"relationName\":\"VoucherToVoucherAssignment\"}],\"dbName\":\"vouchers\"},\"VoucherAssignment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToVoucherAssignment\"},{\"name\":\"voucherId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"voucher_id\"},{\"name\":\"voucher\",\"kind\":\"object\",\"type\":\"Voucher\",\"relationName\":\"VoucherToVoucherAssignment\"},{\"name\":\"transactionId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"transaction_id\"},{\"name\":\"transaction\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"TransactionToVoucherAssignment\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"VoucherStatus\"},{\"name\":\"usedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"used_at\"}],\"dbName\":\"voucher_assignments\"},\"Coupon\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"couponCode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"coupon_code\"},{\"name\":\"discountAmount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"discount_amount\"},{\"name\":\"expiredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"expired_at\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CouponToUser\"},{\"name\":\"transactionId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"transaction_id\"},{\"name\":\"transaction\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"CouponToTransaction\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isUsed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"usedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"coupons\"},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"event_id\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToReview\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewToUser\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"}],\"dbName\":\"reviews\"},\"Badge\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"UserBadge\",\"relationName\":\"BadgeToUserBadge\"}],\"dbName\":\"badges\"},\"UserBadge\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserBadge\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"event_id\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToUserBadge\"},{\"name\":\"badgeId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"badge_id\"},{\"name\":\"badge\",\"kind\":\"object\",\"type\":\"Badge\",\"relationName\":\"BadgeToUserBadge\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"}],\"dbName\":\"user_badges\"},\"Referral\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"referrerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"referrer_id\"},{\"name\":\"referrer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Referrer\"},{\"name\":\"referredId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"referred_id\"},{\"name\":\"referred\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Referred\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"}],\"dbName\":\"referrals\"},\"UserPoints\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserPoints\"},{\"name\":\"totalPoints\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_points\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"user_points\"},\"PointsLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PointsLogToUser\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"PointsLogType\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"points\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"expiredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"points_log\"},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_read\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"}],\"dbName\":\"notifications\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

